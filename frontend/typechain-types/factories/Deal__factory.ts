/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Deal, DealInterface } from "../Deal";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "investedAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalFunds",
        type: "uint256",
      },
    ],
    name: "InvestUpdate",
    type: "event",
  },
  {
    inputs: [],
    name: "claimFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "claimRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "claimTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "config",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "dealdex",
            type: "address",
          },
          {
            internalType: "address",
            name: "manager",
            type: "address",
          },
          {
            internalType: "address",
            name: "project",
            type: "address",
          },
        ],
        internalType: "struct ParticipantAddresses",
        name: "participantAddresses",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "numerator",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "denominator",
            type: "uint256",
          },
        ],
        internalType: "struct ExchangeRate",
        name: "exchangeRate",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "minInvestmentPerInvestor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxInvestmentPerInvestor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minTotalInvestment",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxTotalInvestment",
                type: "uint256",
              },
            ],
            internalType: "struct InvestmentSizeConstraints",
            name: "sizeConstraints",
            type: "tuple",
          },
          {
            internalType: "enum LockedDealConstraint",
            name: "lockConstraint",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "investmentTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "gateToken",
            type: "address",
          },
          {
            internalType: "enum InvestmentKeyType",
            name: "investmentKeyType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "investmentDeadline",
            type: "uint256",
          },
        ],
        internalType: "struct InvestConfig",
        name: "investConfig",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "allowRefunds",
            type: "bool",
          },
          {
            internalType: "enum LockedDealConstraint",
            name: "lockConstraint",
            type: "uint8",
          },
        ],
        internalType: "struct ClaimRefundConfig",
        name: "refundConfig",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "projectTokenAddress",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "dealdexFeeBps",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "managerFeeBps",
            type: "uint16",
          },
          {
            internalType: "enum LockedDealConstraint",
            name: "lockConstraint",
            type: "uint8",
          },
        ],
        internalType: "struct ClaimTokensConfig",
        name: "tokensConfig",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint16",
            name: "dealdexFeeBps",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "managerFeeBps",
            type: "uint16",
          },
          {
            internalType: "enum LockedDealConstraint",
            name: "lockConstraint",
            type: "uint8",
          },
        ],
        internalType: "struct ClaimFundsConfig",
        name: "fundsConfig",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum VestingStrategy",
            name: "vestingStrategy",
            type: "uint8",
          },
          {
            internalType: "uint16[]",
            name: "vestingBps",
            type: "uint16[]",
          },
          {
            internalType: "uint256[]",
            name: "vestingTimestamps",
            type: "uint256[]",
          },
        ],
        internalType: "struct VestingSchedule",
        name: "vestingSchedule",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInvestors",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        internalType: "struct InvestmentKey[]",
        name: "_investmentKeys",
        type: "tuple[]",
      },
      {
        internalType: "uint256[]",
        name: "_investments",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_claimedTokens",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_managerFeeTokens",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_dealdexFeeTokens",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getTotalVestedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "dealdex",
                type: "address",
              },
              {
                internalType: "address",
                name: "manager",
                type: "address",
              },
              {
                internalType: "address",
                name: "project",
                type: "address",
              },
            ],
            internalType: "struct ParticipantAddresses",
            name: "participantAddresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "numerator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "denominator",
                type: "uint256",
              },
            ],
            internalType: "struct ExchangeRate",
            name: "exchangeRate",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "minInvestmentPerInvestor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxInvestmentPerInvestor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minTotalInvestment",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxTotalInvestment",
                    type: "uint256",
                  },
                ],
                internalType: "struct InvestmentSizeConstraints",
                name: "sizeConstraints",
                type: "tuple",
              },
              {
                internalType: "enum LockedDealConstraint",
                name: "lockConstraint",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "investmentTokenAddress",
                type: "address",
              },
              {
                internalType: "address",
                name: "gateToken",
                type: "address",
              },
              {
                internalType: "enum InvestmentKeyType",
                name: "investmentKeyType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "investmentDeadline",
                type: "uint256",
              },
            ],
            internalType: "struct InvestConfig",
            name: "investConfig",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "allowRefunds",
                type: "bool",
              },
              {
                internalType: "enum LockedDealConstraint",
                name: "lockConstraint",
                type: "uint8",
              },
            ],
            internalType: "struct ClaimRefundConfig",
            name: "refundConfig",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "projectTokenAddress",
                type: "address",
              },
              {
                internalType: "uint16",
                name: "dealdexFeeBps",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "managerFeeBps",
                type: "uint16",
              },
              {
                internalType: "enum LockedDealConstraint",
                name: "lockConstraint",
                type: "uint8",
              },
            ],
            internalType: "struct ClaimTokensConfig",
            name: "tokensConfig",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "dealdexFeeBps",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "managerFeeBps",
                type: "uint16",
              },
              {
                internalType: "enum LockedDealConstraint",
                name: "lockConstraint",
                type: "uint8",
              },
            ],
            internalType: "struct ClaimFundsConfig",
            name: "fundsConfig",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum VestingStrategy",
                name: "vestingStrategy",
                type: "uint8",
              },
              {
                internalType: "uint16[]",
                name: "vestingBps",
                type: "uint16[]",
              },
              {
                internalType: "uint256[]",
                name: "vestingTimestamps",
                type: "uint256[]",
              },
            ],
            internalType: "struct VestingSchedule",
            name: "vestingSchedule",
            type: "tuple",
          },
        ],
        internalType: "struct DealConfig",
        name: "_dealConfig",
        type: "tuple",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "invest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "investmentKeyToClaimedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "investmentKeyToReceivedDealdexFeeTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "investmentKeyToReceivedFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "investmentKeyToReceivedManagerFeeTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "investmentKeys",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isLockedFlag",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "overrides",
    outputs: [
      {
        internalType: "bool",
        name: "forceAllowRefunds",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "fundFeeBps",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "tokenFeeBps",
        type: "uint16",
      },
    ],
    name: "setDealDexFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "val",
        type: "bool",
      },
    ],
    name: "setForceAllowRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "fundFeeBps",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "tokenFeeBps",
        type: "uint16",
      },
    ],
    name: "setManagerFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_projectTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_exchangeRateNum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_exchangeRateDenom",
        type: "uint256",
      },
    ],
    name: "setProjectTokenDetails",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReceivedInvestment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061420d806100206000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80639f1906f3116100b8578063ac3077731161007c578063ac307773146102ce578063ace3e818146102d6578063b2f5a54c146102e9578063c3fef37014610302578063d87aa64314610334578063f5ef65d91461034757600080fd5b80639f1906f314610247578063a282d70114610272578063a2bc495614610285578063a4e2d634146102b0578063a869d42c146102bb57600080fd5b80638ffa9f1c116100ff5780638ffa9f1c146101b8578063939a292e146101cb57806399f0e733146101f65780639d9b48a2146102215780639dde9f161461023457600080fd5b8063466b0a281461013c57806346e04a2f146101585780634a85f0411461016d5780635b7baf641461018a57806379502c551461019d575b600080fd5b61014560195481565b6040519081526020015b60405180910390f35b61016b6101663660046135af565b610354565b005b601b5461017a9060ff1681565b604051901515815260200161014f565b61016b6101983660046135af565b610b7d565b6101a5610f33565b60405161014f97969594939291906139ff565b61016b6101c636600461349a565b611330565b6101456101d936600461346f565b601660209081526000928352604080842090915290825290205481565b61014561020436600461346f565b601360209081526000928352604080842090915290825290205481565b61016b61022f3660046134ce565b611445565b61016b610242366004613577565b6114be565b61014561025536600461346f565b601460209081526000928352604080842090915290825290205481565b6101456102803660046135af565b611549565b61014561029336600461346f565b601560209081526000928352604080842090915290825290205481565b601a5460ff1661017a565b61016b6102c9366004613522565b611929565b61016b611957565b61016b6102e4366004613577565b612096565b6102f161213f565b60405161014f9594939291906138cc565b6103156103103660046135af565b61257b565b604080516001600160a01b03909316835260208301919091520161014f565b61016b6103423660046135df565b6125b3565b601a5461017a9060ff1681565b600d546001600160a01b03166103b15760405162461bcd60e51b815260206004820152601f60248201527f50726f6a65637420746f6b656e206e6f7420796574207370656369666965640060448201526064015b60405180910390fd5b600d546103c790600160c01b900460ff16612b01565b601a5460ff16156103e75760405180602001604052806000815250610403565b604051806040016040528060028152602001613ab760f11b8152505b60405160200161041391906137bd565b604051602081830303815290604052906104405760405162461bcd60e51b81526004016103a89190613976565b50600061044c82611549565b9050600081116104b35760405162461bcd60e51b815260206004820152602c60248201527f5a65726f20746f6b656e732068617665206265656e2076657374656420746f2060448201526b3a34329034b73b32b9ba37b960a11b60648201526084016103a8565b600d54600090612710906104d290600160a01b900461ffff1684613b99565b6104dc9190613b79565b90506104e9601684612b9a565b81101561057c5760405162461bcd60e51b815260206004820152605560248201527f4465616c44657820686173207265636569766564206d6f726520746f6b656e7360448201527f207468616e2068617665206265656e207665737465642e20417474656d70746560648201527464207265656e7472616e63792061747461636b3f2160581b608482015260a4016103a8565b600d546000906127109061059b90600160b01b900461ffff1685613b99565b6105a59190613b79565b90506105b2601585612b9a565b8110156106455760405162461bcd60e51b815260206004820152605560248201527f4d616e6167657220686173207265636569766564206d6f726520746f6b656e7360448201527f207468616e2068617665206265656e207665737465642e20417474656d70746560648201527464207265656e7472616e63792061747461636b3f2160581b608482015260a4016103a8565b6000826106528386613bb8565b61065c9190613bb8565b9050610669601486612b9a565b8110156106fc5760405162461bcd60e51b815260206004820152605560248201527f496e766573746f722068617320636c61696d6564206d6f726520746f6b656e7360448201527f207468616e2068617665206265656e207665737465642e20417474656d70746560648201527464207265656e7472616e63792061747461636b3f2160581b608482015260a4016103a8565b6000610709601687612b9a565b6107139085613bb8565b90506000610722601588612b9a565b61072c9085613bb8565b9050600061073b601489612b9a565b6107459085613bb8565b9050600081116107ac5760405162461bcd60e51b815260206004820152602c60248201527f496e766573746f7220686173207a65726f20746f6b656e7320617661696c616260448201526b6c6520666f7220636c61696d60a01b60648201526084016103a8565b600d546040516370a0823160e01b81523060048201526001600160a01b039091169060009082906370a082319060240160206040518083038186803b1580156107f457600080fd5b505afa158015610808573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082c91906135c7565b9050826108398587613b61565b6108439190613b61565b8110156108a75760405162461bcd60e51b815260206004820152602c60248201527f436f6e747261637420646f6573206e6f74206861766520656e6f75676820746f60448201526b1ad95b9cc81d1bc81cd95b9960a21b60648201526084016103a8565b841561098b576108b960168b8a612cab565b60005460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018790529083169063a9059cbb90604401602060405180830381600087803b15801561090757600080fd5b505af115801561091b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093f91906134ea565b61098b5760405162461bcd60e51b815260206004820152601b60248201527f546f6b656e2066656520746f204465616c446578206661696c6564000000000060448201526064016103a8565b8315610a815761099d60158b89612cab565b60015460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018690529083169063a9059cbb90604401602060405180830381600087803b1580156109eb57600080fd5b505af11580156109ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2391906134ea565b610a815760405162461bcd60e51b815260206004820152602960248201527f546f6b656e2066656520746f2073796e646963617465206d616e61676572206660448201526819594819985a5b195960ba1b60648201526084016103a8565b8215610b7157610a9360148b88612cab565b60405163a9059cbb60e01b8152336004820152602481018490526001600160a01b0383169063a9059cbb90604401602060405180830381600087803b158015610adb57600080fd5b505af1158015610aef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1391906134ea565b610b715760405162461bcd60e51b815260206004820152602960248201527f5472616e73666572206f6620746f6b656e7320746f2074686520696e766573746044820152681bdc8819985a5b195960ba1b60648201526084016103a8565b50505050505050505050565b601b5460ff16610c6157600c5460ff16610bd25760405162461bcd60e51b81526020600482015260166024820152754465616c20646973616c6c6f777320726566756e647360501b60448201526064016103a8565b600c54610be690610100900460ff16612b01565b601a5460ff1615610c065760405180602001604052806000815250610c22565b604051806040016040528060028152602001613ab760f11b8152505b604051602001610c329190613883565b60405160208183030381529060405290610c5f5760405162461bcd60e51b81526004016103a89190613976565b505b6000610c6e601383612b9a565b905060008111610cdd5760405162461bcd60e51b815260206004820152603460248201527f5a65726f20696e76657374656421204f6e6c7920616e20696e766573746f722060448201527318d85b881c9958d95a5d994818481c99599d5b9960621b60648201526084016103a8565b6000610ce883612d79565b905060005b601254811015610ddc5781600001516001600160a01b031660128281548110610d2657634e487b7160e01b600052603260045260246000fd5b60009182526020909120600290910201546001600160a01b0316148015610d825750816020015160128281548110610d6e57634e487b7160e01b600052603260045260246000fd5b906000526020600020906002020160010154145b15610dca5760128181548110610da857634e487b7160e01b600052603260045260246000fd5b60009182526020822060029091020180546001600160a01b0319168155600101555b80610dd481613fcb565b915050610ced565b508160196000828254610def9190613bb8565b90915550610e0290506013846000612cab565b60095460405163a9059cbb60e01b81523360048201526024810184905260009161010090046001600160a01b03169063a9059cbb90604401602060405180830381600087803b158015610e5457600080fd5b505af1158015610e68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8c91906134ea565b905080610eea5760405162461bcd60e51b815260206004820152602660248201527f4661696c656420746f207472616e736665722074686520726566756e64656420604482015265185b5bdd5b9d60d21b60648201526084016103a8565b60195460408051600081526020810192909252859133917fd6049e9e238db10a7c3d9a8dbac0eab4351c7a1d2b89641af2702624fedcf11291015b60405180910390a350505050565b60408051606081018252600080546001600160a01b0390811683526001548116602080850191909152600280549092168486015284518086018652600354815260045481830152855161014081019096526005805460c0880190815260065460e08901526007546101008901526008546101208901528752600954959691959193909284019160ff1690811115610fda57634e487b7160e01b600052602160045260246000fd5b6002811115610ff957634e487b7160e01b600052602160045260246000fd5b8152600482015461010090046001600160a01b03908116602083015260058301549081166040830152606090910190600160a01b900460ff16600181111561105157634e487b7160e01b600052602160045260246000fd5b600181111561107057634e487b7160e01b600052602160045260246000fd5b81526006919091015460209182015260408051808201909152600c8401805460ff8082161515845294959492939192918401916101009091041660028111156110c957634e487b7160e01b600052602160045260246000fd5b60028111156110e857634e487b7160e01b600052602160045260246000fd5b90525060408051608081018252600d840180546001600160a01b038116835261ffff600160a01b820481166020850152600160b01b820416938301939093529293929091606083019060ff600160c01b90910416600281111561115b57634e487b7160e01b600052602160045260246000fd5b600281111561117a57634e487b7160e01b600052602160045260246000fd5b90525060408051606081018252600e8401805461ffff80821684526201000082041660208401529394939192909190830190640100000000900460ff1660028111156111d657634e487b7160e01b600052602160045260246000fd5b60028111156111f557634e487b7160e01b600052602160045260246000fd5b9052506040805160608101909152600f83018054929392829060ff16600281111561123057634e487b7160e01b600052602160045260246000fd5b600281111561124f57634e487b7160e01b600052602160045260246000fd5b8152602001600182018054806020026020016040519081016040528092919081815260200182805480156112ca57602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116112915790505b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561132257602002820191906000526020600020905b81548152602001906001019080831161130e575b505050505081525050905087565b6002546001600160a01b0316331461139d5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79207468652070726f6a6563742063616e20736574207468652070726f6044820152693532b1ba103a37b5b2b760b11b60648201526084016103a8565b600d546001600160a01b03161561141c5760405162461bcd60e51b815260206004820152603f60248201527f5468652070726f6a65637420616c726561647920736574207468652070726f6a60448201527f65637420746f6b656e3b2069742063616e6e6f74206265206368616e6765640060648201526084016103a8565b600d80546001600160a01b0319166001600160a01b039490941693909317909255600355600455565b6000546001600160a01b031633146114ab5760405162461bcd60e51b8152602060048201526024808201527f4f6e6c79204465616c4465782063616e20666f72636520616c6c6f7720726566604482015263756e647360e01b60648201526084016103a8565b601b805460ff1916911515919091179055565b6000546001600160a01b031633146115185760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79204465616c4465782063616e2075706461746520697473206665657360448201526064016103a8565b600e805461ffff93841661ffff19909116179055600d805491909216600160a01b0261ffff60a01b19909116179055565b60006002600f5460ff16600281111561157257634e487b7160e01b600052602160045260246000fd5b14156115d65760405162461bcd60e51b815260206004820152602d60248201527f496e766573746d656e742d73697a6520736f727465642076657374696e67206960448201526c1cc81d5b9cdd5c1c1bdc9d1959609a1b60648201526084016103a8565b6000805b60105481101561167357601180544291908390811061160957634e487b7160e01b600052603260045260246000fd5b9060005260206000200154101561166157601080548290811061163c57634e487b7160e01b600052603260045260246000fd5b60009182526020909120601082040154600f9091166002026101000a900461ffff1691505b8061166b81613fcb565b9150506115da565b506000611689611684601386612b9a565b612ed6565b90506000600f5460ff1660028111156116b257634e487b7160e01b600052602160045260246000fd5b14156116d7576127106116c58383613b99565b6116cf9190613b79565b949350505050565b6000805b6012548110156117aa5760006012828154811061170857634e487b7160e01b600052603260045260246000fd5b60009182526020822060029091020154601280546001600160a01b039092169350908490811061174857634e487b7160e01b600052603260045260246000fd5b60009182526020808320600160029093020191909101546001600160a01b038516835260138252604080842082855290925291205490915061178990612ed6565b6117939085613b61565b9350505080806117a290613fcb565b9150506116db565b5060006127106117ba8584613b99565b6117c49190613b79565b905060006117d187612d79565b90506001600f5460ff1660028111156117fa57634e487b7160e01b600052602160045260246000fd5b141561191c5760005b60125481101561191a5760006012828154811061183057634e487b7160e01b600052603260045260246000fd5b60009182526020822060029091020154601280546001600160a01b039092169350908490811061187057634e487b7160e01b600052603260045260246000fd5b906000526020600020906002020160010154905083600001516001600160a01b0316826001600160a01b03161480156118ac5750836020015181145b156118c9576118bb8588612ef4565b9a9950505050505050505050565b6001600160a01b03821660009081526013602090815260408083208484529091528120546118f690612ed6565b90506119028187613bb8565b9550505050808061191290613fcb565b915050611803565b505b5060009695505050505050565b61193281612f0c565b80600061193f828261409b565b5050600754601a805460ff1916911591909117905550565b6002546001600160a01b031633146119bd5760405162461bcd60e51b8152602060048201526024808201527f4f6e6c79207468652070726f6a6563742063616e20636c61696d207468652066604482015263756e647360e01b60648201526084016103a8565b600e546119d490640100000000900460ff16612b01565b601a5460ff16156119f45760405180602001604052806000815250611a10565b604051806040016040528060028152602001613ab760f11b8152505b604051602001611a209190613758565b60405160208183030381529060405290611a4d5760405162461bcd60e51b81526004016103a89190613976565b506009546040516370a0823160e01b81523060048201526101009091046001600160a01b03169060009082906370a082319060240160206040518083038186803b158015611a9a57600080fd5b505afa158015611aae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad291906135c7565b600e5490915060009061271090611aed9061ffff1684613b99565b611af79190613b79565b9050601854811015611b8c5760405162461bcd60e51b815260206004820152605260248201527f4465616c44657820686173207265636569766564206d6f72652066756e64732060448201527f7468616e2069742073686f756c6420686176652e20417474656d70746564207260648201527165656e7472616e63792061747461636b3f2160701b608482015260a4016103a8565b600060185482611b9c9190613bb8565b90508015611c9d578060186000828254611bb69190613b61565b90915550506000805460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018490529086169063a9059cbb90604401602060405180830381600087803b158015611c0a57600080fd5b505af1158015611c1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c4291906134ea565b905080611c9b5760405162461bcd60e51b815260206004820152602160248201527f496e766573746d656e742066656520746f204465616c446578206661696c65646044820152601760f91b60648201526084016103a8565b505b600e5460009061271090611cbb9062010000900461ffff1686613b99565b611cc59190613b79565b9050601754811015611d655760405162461bcd60e51b815260206004820152605c60248201527f53796e646963617465206d616e6167657220686173207265636569766564206d60448201527f6f72652066756e6473207468616e2069742073686f756c6420686176652e204160648201527f7474656d70746564207265656e7472616e63792061747461636b3f2100000000608482015260a4016103a8565b600060175482611d759190613bb8565b90508015611e81578060176000828254611d8f9190613b61565b909155505060015460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810183905260009188169063a9059cbb90604401602060405180830381600087803b158015611de457600080fd5b505af1158015611df8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e1c91906134ea565b905080611e7f5760405162461bcd60e51b815260206004820152602b60248201527f496e766573746d656e742066656520746f2073796e646963617465206d616e6160448201526a33b2b9103330b4b632b21760a91b60648201526084016103a8565b505b80611e8c8487613bb8565b611e969190613bb8565b6040516370a0823160e01b81523060048201526001600160a01b038816906370a082319060240160206040518083038186803b158015611ed557600080fd5b505afa158015611ee9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f0d91906135c7565b14611f805760405162461bcd60e51b815260206004820152603860248201527f52656d61696e696e672062616c616e636520646f6573206d61746368206f726960448201527f67696e616c2062616c616e6365206d696e75732066656573000000000000000060648201526084016103a8565b6002546000906001600160a01b038089169163a9059cbb911684611fa4888b613bb8565b611fae9190613bb8565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015611ff457600080fd5b505af1158015612008573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061202c91906134ea565b90508061208d5760405162461bcd60e51b815260206004820152602960248201527f4661696c656420746f207472616e736665722066756e647320746f207468652060448201526834b73b32b9ba37b91760b91b60648201526084016103a8565b50505050505050565b6001546001600160a01b031633146121075760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c79207468652073796e646963617465206d616e616765722063616e207560448201526d706461746520697473206665657360901b60648201526084016103a8565b600e805461ffff938416620100000263ffff000019909116179055600d805491909216600160b01b0261ffff60b01b19909116179055565b606080606080606060128054905067ffffffffffffffff81111561217357634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156121b857816020015b60408051808201909152600080825260208201528152602001906001900390816121915790505b5060125490955067ffffffffffffffff8111156121e557634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561220e578160200160208202803683370190505b5060125490945067ffffffffffffffff81111561223b57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015612264578160200160208202803683370190505b5060125490935067ffffffffffffffff81111561229157634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156122ba578160200160208202803683370190505b5060125490925067ffffffffffffffff8111156122e757634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015612310578160200160208202803683370190505b50905060005b601254811015612573576012818154811061234157634e487b7160e01b600052603260045260246000fd5b60009182526020918290206040805180820190915260029092020180546001600160a01b031682526001015491810191909152865187908390811061239657634e487b7160e01b600052603260045260246000fd5b60200260200101819052506000601282815481106123c457634e487b7160e01b600052603260045260246000fd5b60009182526020822060029091020154601280546001600160a01b039092169350908490811061240457634e487b7160e01b600052603260045260246000fd5b60009182526020808320600160029093020191909101546001600160a01b038516835260138252604080842082855290925291205488519192509088908590811061245f57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101919091526001600160a01b0383166000908152601482526040808220848352909252205486518790859081106124b057634e487b7160e01b600052603260045260246000fd5b6020908102919091018101919091526001600160a01b03831660009081526015825260408082208483529092522054855186908590811061250157634e487b7160e01b600052603260045260246000fd5b6020908102919091018101919091526001600160a01b03831660009081526016825260408082208483529092522054845185908590811061255257634e487b7160e01b600052603260045260246000fd5b6020026020010181815250505050808061256b90613fcb565b915050612316565b509091929394565b6012818154811061258b57600080fd5b6000918252602090912060029091020180546001909101546001600160a01b03909116915082565b6125be601382612b9a565b1561260b5760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f7420696e76657374206d756c7469706c652074696d65730000000060448201526064016103a8565b60055482101561265d5760405162461bcd60e51b815260206004820152601c60248201527f496e766573746d656e7420616d6f756e7420697320746f6f206c6f770000000060448201526064016103a8565b6006548211156126af5760405162461bcd60e51b815260206004820152601d60248201527f496e766573746d656e7420616d6f756e7420697320746f6f206869676800000060448201526064016103a8565b6008546019546126bf9084613b61565b11156127215760405162461bcd60e51b815260206004820152602b60248201527f496e766573746d656e742077696c6c2065786365656420746f74616c20696e7660448201526a06573746d656e74206361760ac1b60648201526084016103a8565b600b544211156127735760405162461bcd60e51b815260206004820152601e60248201527f496e766573746d656e7420646561646c696e652068617320706173736564000060448201526064016103a8565b600a546001600160a01b0316158061280d5750600a546040516331a9108f60e11b81526004810183905233916001600160a01b031690636352211e9060240160206040518083038186803b1580156127ca57600080fd5b505afa1580156127de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128029190613453565b6001600160a01b0316145b61287f5760405162461bcd60e51b815260206004820152603b60248201527f496e766573746f7220646f6573206e6f74206f776e207468652072657175697360448201527f697465204e465420666f722074686973206761746564206465616c000000000060648201526084016103a8565b60095461288e9060ff16612b01565b601a5460ff16156128ae57604051806020016040528060008152506128ca565b604051806040016040528060028152602001613ab760f11b8152505b6040516020016128da9190613823565b604051602081830303815290604052906129075760405162461bcd60e51b81526004016103a89190613976565b5060095461010090046001600160a01b031661292560138385612cab565b82601960008282546129379190613b61565b90915550506040516323b872dd60e01b8152336004820152306024820152604481018490526000906001600160a01b038316906323b872dd90606401602060405180830381600087803b15801561298d57600080fd5b505af11580156129a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129c591906134ea565b905080612a605760405162461bcd60e51b815260206004820152605960248201527f4661696c656420746f20696e7665737420746f6b656e732c207065726861707360448201527f2074686520696e766573746f7220686173206e6f7420617070726f766564207360648201527f756666696369656e742066756e647320746f20696e7665737400000000000000608482015260a4016103a8565b600754601954601a805460ff191692909110159190911790556012612a8484612d79565b8154600180820184556000938452602093849020835160029093020180546001600160a01b0319166001600160a01b03909316929092178255918301519101556019546040805187815292830191909152849133917fd6049e9e238db10a7c3d9a8dbac0eab4351c7a1d2b89641af2702624fedcf1129101610f25565b600080826002811115612b2457634e487b7160e01b600052602160045260246000fd5b1480612b5c57506001826002811115612b4d57634e487b7160e01b600052602160045260246000fd5b148015612b5c5750601a5460ff165b80612b9457506002826002811115612b8457634e487b7160e01b600052602160045260246000fd5b148015612b945750601a5460ff16155b92915050565b600080600a54600160a01b900460ff166001811115612bc957634e487b7160e01b600052602160045260246000fd5b1415612c0c578115612bed5760405162461bcd60e51b81526004016103a8906139a9565b5033600090815260208381526040808320848452909152902054612b94565b6001600a54600160a01b900460ff166001811115612c3a57634e487b7160e01b600052602160045260246000fd5b1415612c6a5750600a546001600160a01b0316600090815260208381526040808320848452909152902054612b94565b60405162461bcd60e51b8152602060048201526016602482015275496e76616c696420696e766573746d656e74206b657960501b60448201526064016103a8565b6000600a54600160a01b900460ff166001811115612cd957634e487b7160e01b600052602160045260246000fd5b1415612d19578115612cfd5760405162461bcd60e51b81526004016103a8906139a9565b3360009081526020938452604080822093825292909352912055565b6001600a54600160a01b900460ff166001811115612d4757634e487b7160e01b600052602160045260246000fd5b1415612d7457600a546001600160a01b031660009081526020848152604080832085845290915290208190555b505050565b6040805180820182526000808252602080830182905283518085019094528184528301849052600a54919291600160a01b900460ff166001811115612dce57634e487b7160e01b600052602160045260246000fd5b1415612e47578215612e3f5760405162461bcd60e51b815260206004820152603460248201527f4964206d757374206265203020666f7220696e766573746f722077616c6c657460448201527320696e766573746d656e74206b6579207479706560601b60648201526084016103a8565b338152612b94565b6001600a54600160a01b900460ff166001811115612e7557634e487b7160e01b600052602160045260246000fd5b1415612e8e57600a546001600160a01b03168152612b94565b60405162461bcd60e51b815260206004820152601f60248201527f556e737570706f7274656420696e766573746d656e74206b657920747970650060448201526064016103a8565b60045460035460009190612eea9084613b99565b612b949190613b79565b6000818310612f035781612f05565b825b9392505050565b612f22612f1d6102e0830183613b42565b612fea565b6001600a54600160a01b900460ff166001811115612f5057634e487b7160e01b600052602160045260246000fd5b141580612f675750600a546001600160a01b031615155b612fe75760405162461bcd60e51b8152602060048201526044602482018190527f4761746520746f6b656e206d757374206265207370656369666965642073696e908201527f636520696e766573746d656e74206b657920747970652069732067617465207460648201526337b5b2b760e11b608482015260a4016103a8565b50565b6002612ff96020830183613506565b600281111561301857634e487b7160e01b600052602160045260246000fd5b14156130805760405162461bcd60e51b815260206004820152603160248201527f496e766573746d656e742d73697a6520736f727465642076657374696e6720696044820152701cc81b9bdd081a5b5c1b195b595b9d1959607a1b60648201526084016103a8565b600061308f6020830183613af3565b9050116130de5760405162461bcd60e51b815260206004820181905260248201527f56657374696e67207363686564756c652063616e6e6f7420626520656d70747960448201526064016103a8565b6130eb6040820182613af3565b90506130fa6020830183613af3565b9050146131895760405162461bcd60e51b815260206004820152605160248201527f56657374696e6720627073206d7573742068617665207468652073616d65207360448201527f697a65202831206f6e203120636f72726573706f6e64656e6365292061732076606482015270657374696e672074696d657374616d707360781b608482015260a4016103a8565b60015b6131996020830183613af3565b9050811015613394576131af6040830183613af3565b6131ba600184613bb8565b8181106131d757634e487b7160e01b600052603260045260246000fd5b905060200201358280604001906131ee9190613af3565b8381811061320c57634e487b7160e01b600052603260045260246000fd5b90506020020135116132865760405162461bcd60e51b815260206004820152603c60248201527f56657374696e672074696d656c696e65206d75737420636f6e7461696e20737460448201527f726963746c7920696e6372656173696e672074696d657374616d70730000000060648201526084016103a8565b6132936020830183613af3565b61329e600184613bb8565b8181106132bb57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906132d0919061355b565b61ffff166132e16020840184613af3565b838181106132ff57634e487b7160e01b600052603260045260246000fd5b9050602002016020810190613314919061355b565b61ffff16116133825760405162461bcd60e51b815260206004820152603460248201527f56657374656420616d6f756e7473206d757374206265207374726963746c7920604482015273696e6372656173696e6720776974682074696d6560601b60648201526084016103a8565b8061338c81613fcb565b91505061318c565b506133a26020820182613af3565b60016133b16020850185613af3565b6133bc929150613bb8565b8181106133d957634e487b7160e01b600052603260045260246000fd5b90506020020160208101906133ee919061355b565b61ffff1661271014612fe75760405162461bcd60e51b815260206004820152602860248201527f456e64206f662076657374696e67206d757374207969656c642031303025206f6044820152676620746f6b656e7360c01b60648201526084016103a8565b600060208284031215613464578081fd5b8151612f0581614197565b60008060408385031215613481578081fd5b823561348c81614197565b946020939093013593505050565b6000806000606084860312156134ae578081fd5b83356134b981614197565b95602085013595506040909401359392505050565b6000602082840312156134df578081fd5b8135612f05816141ac565b6000602082840312156134fb578081fd5b8151612f05816141ac565b600060208284031215613517578081fd5b8135612f05816141ba565b600060208284031215613533578081fd5b813567ffffffffffffffff811115613549578182fd5b82016103008185031215612f05578182fd5b60006020828403121561356c578081fd5b8135612f05816141c7565b60008060408385031215613589578182fd5b8235613594816141c7565b915060208301356135a4816141c7565b809150509250929050565b6000602082840312156135c0578081fd5b5035919050565b6000602082840312156135d8578081fd5b5051919050565b600080604083850312156135f1578182fd5b50508035926020909101359150565b6000815180845260208085019450808401835b8381101561362f57815187529582019590820190600101613613565b509495945050505050565b6002811061364a5761364a613ffc565b9052565b61ffff80825116835280602083015116602084015250604081015161367281614187565b806040840152505050565b805115158252602081015161369181614187565b806020840152505050565b60018060a01b038151168252602081015161ffff8082166020850152806040840151166040850152505060608101516136d481614187565b806060840152505050565b60006060830182516136f081614187565b8452602083810151606082870152805192839052810191839060808701905b8083101561373357845161ffff16825293830193600192909201919083019061370f565b5060408601519350868103604088015261374d8185613600565b979650505050505050565b7f43616e6e6f7420636c61696d2066756e64732062656361757365207468652064815266032b0b61034b9960cd1b6020820152600082516137a0816027850160208701613c4d565b651b1bd8dad95960d21b6027939091019283015250602d01919050565b7f43616e6e6f7420636c61696d20746f6b656e732062656361757365207468652081526703232b0b61034b9960c51b602082015260008251613806816028850160208701613c4d565b651b1bd8dad95960d21b6028939091019283015250602e01919050565b7f43616e6e6f7420696e76657374206265636175736520746865206465616c2069815261039960f51b602082015260008251613866816022850160208701613c4d565b651b1bd8dad95960d21b6022939091019283015250602801919050565b7f43616e6e6f7420636c61696d20726566756e642062656361757365207468652081526703232b0b61034b9960c51b602082015260008251613806816028850160208701613c4d565b60a0808252865190820181905260009060209060c0840190828a01845b8281101561391957815180516001600160a01b0316855285015185850152604090930192908401906001016138e9565b5050508381038285015261392d8189613600565b91505082810360408401526139428187613600565b905082810360608401526139568186613600565b9050828103608084015261396a8185613600565b98975050505050505050565b6020815260008251806020840152613995816040850160208701613c4d565b601f01601f19169190910160400192915050565b60208082526036908201527f496e766573746d656e747320617265206173736f636961746564207769746820604082015275077616c6c657420736f206964206d75737420626520360541b606082015260800190565b600061030060018060a01b03808b511684528060208c01511660208501528060408c01511660408501528951606085015260208a015160808501528851805160a0860152602081015160c0860152604081015160e08601526060810151610100860152506020890151613a7181614187565b61012085015260408901511661014084015260608801516001600160a01b03166101608401526080880151613aaa61018085018261363a565b5060a08801516101a0840152613ac46101c084018861367d565b613ad261020084018761369c565b613ae061028084018661364e565b806102e08401526118bb818401856136df565b6000808335601e19843603018112613b09578283fd5b83018035915067ffffffffffffffff821115613b23578283fd5b6020019150600581901b3603821315613b3b57600080fd5b9250929050565b60008235605e19833603018112613b57578182fd5b9190910192915050565b60008219821115613b7457613b74613fe6565b500190565b600082613b9457634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615613bb357613bb3613fe6565b500290565b600082821015613bca57613bca613fe6565b500390565b5b81811015613be45760008155600101613bd0565b5050565b600160401b831115613bfc57613bfc614012565b805483825580841015613c2257816000526020600020613c20828201868301613bcf565b505b50818160005260208060002060005b8681101561208d57833582559282019260019182019101613c31565b60005b83811015613c68578181015183820152602001613c50565b83811115613c77576000848401525b50505050565b8135613c88816141c7565b61ffff8116905081548161ffff1982161783556020840135613ca9816141c7565b63ffff00008160101b169050808363ffffffff198416171784556040850135613cd1816141ba565b613cda81614187565b64ff000000008160201b168464ffffffffff198516178317178555505050505050565b8135613d08816141ac565b815460ff19811691151560ff1691821783556020840135613d28816141ba565b613d3181614187565b61ff008160081b168361ffff198416171784555050505050565b8135613d5681614197565b613d60818361405f565b506020820135613d6f816141c7565b815461ffff60a01b19811660a09290921b61ffff60a01b1691821783556040840135613d9a816141c7565b61ffff60b01b60b09190911b1663ffffffff60a01b1982168317811784556060850135613dc6816141ba565b613dcf81614187565b64ffffffffff60a01b19929092169092179190911760c09190911b60ff60c01b1617905550565b8135815560208201356001820155604082013560028201556060820135600382015560048101613e31613e2b60808501614045565b8261407f565b613e66613e4060a08501614028565b828054610100600160a81b03191660089290921b610100600160a81b0316919091179055565b5060058101613e80613e7a60c08501614028565b8261405f565b613e95613e8f60e08501614035565b8261415a565b5061010082013560068201555050565b8135613eb0816141ba565b613eb981614187565b60ff1982541660ff821681178355505060018082016020613edc81860186613af3565b600160401b811115613ef057613ef0614012565b835481855580821015613f46578460005283600020600f830160041c8101601e84891b168015613f3057600019808301805482848b0360031b1c16815550505b50613f43600f840160041c830182613bcf565b50505b5060009384526020842093805b82811015613fa957613f85613f6785614052565b875461ffff600386901b81811b801990931693909116901b16178755565b8484019350600282019150601e821115613fa25794860194600091505b8601613f53565b50505050505050613fbd6040830183613af3565b613c77818360028601613be8565b6000600019821415613fdf57613fdf613fe6565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60008135612b9481614197565b6000813560028110612b94578182fd5b60008135612b94816141ba565b60008135612b94816141c7565b80546001600160a01b0319166001600160a01b0392909216919091179055565b61408882614187565b60ff1981541660ff831681178255505050565b81356140a681614197565b6140b0818361405f565b5060208201356140bf81614197565b6140cc816001840161405f565b5060408201356140db81614197565b6140e8816002840161405f565b50606082013560038201556080820135600482015561410d60a0830160058301613df6565b61411e6101c08301600c8301613cfd565b61412f6102008301600d8301613d4b565b6141406102808301600e8301613c7d565b613be46141516102e0840184613b42565b600f8301613ea5565b6002821061416a5761416a613ffc565b805460ff60a01b191660a09290921b60ff60a01b16919091179055565b60038110612fe757612fe7613ffc565b6001600160a01b0381168114612fe757600080fd5b8015158114612fe757600080fd5b60038110612fe757600080fd5b61ffff81168114612fe757600080fdfea26469706673582212201dd1c612d501aca433bb30c5332056d8f2118481a203c9fe08f398110d9233d864736f6c63430008040033";

type DealConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DealConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Deal__factory extends ContractFactory {
  constructor(...args: DealConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Deal";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Deal> {
    return super.deploy(overrides || {}) as Promise<Deal>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Deal {
    return super.attach(address) as Deal;
  }
  connect(signer: Signer): Deal__factory {
    return super.connect(signer) as Deal__factory;
  }
  static readonly contractName: "Deal";
  public readonly contractName: "Deal";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DealInterface {
    return new utils.Interface(_abi) as DealInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Deal {
    return new Contract(address, _abi, signerOrProvider) as Deal;
  }
}
