/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Deal, DealInterface } from "../Deal";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "investedAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalFunds",
        type: "uint256",
      },
    ],
    name: "InvestUpdate",
    type: "event",
  },
  {
    inputs: [],
    name: "claimFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "claimRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "claimTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "config",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "dealdex",
            type: "address",
          },
          {
            internalType: "address",
            name: "manager",
            type: "address",
          },
          {
            internalType: "address",
            name: "project",
            type: "address",
          },
        ],
        internalType: "struct ParticipantAddresses",
        name: "participantAddresses",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "numerator",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "denominator",
            type: "uint256",
          },
        ],
        internalType: "struct ExchangeRate",
        name: "exchangeRate",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "minInvestmentPerInvestor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxInvestmentPerInvestor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minTotalInvestment",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxTotalInvestment",
                type: "uint256",
              },
            ],
            internalType: "struct InvestmentSizeConstraints",
            name: "sizeConstraints",
            type: "tuple",
          },
          {
            internalType: "enum LockedDealConstraint",
            name: "lockConstraint",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "investmentTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "gateToken",
            type: "address",
          },
          {
            internalType: "enum InvestmentKeyType",
            name: "investmentKeyType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "investmentDeadline",
            type: "uint256",
          },
        ],
        internalType: "struct InvestConfig",
        name: "investConfig",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "allowRefunds",
            type: "bool",
          },
          {
            internalType: "enum LockedDealConstraint",
            name: "lockConstraint",
            type: "uint8",
          },
        ],
        internalType: "struct ClaimRefundConfig",
        name: "refundConfig",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "projectTokenAddress",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "dealdexFeeBps",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "managerFeeBps",
            type: "uint16",
          },
          {
            internalType: "enum LockedDealConstraint",
            name: "lockConstraint",
            type: "uint8",
          },
        ],
        internalType: "struct ClaimTokensConfig",
        name: "tokensConfig",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint16",
            name: "dealdexFeeBps",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "managerFeeBps",
            type: "uint16",
          },
          {
            internalType: "enum LockedDealConstraint",
            name: "lockConstraint",
            type: "uint8",
          },
        ],
        internalType: "struct ClaimFundsConfig",
        name: "fundsConfig",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum VestingStrategy",
            name: "vestingStrategy",
            type: "uint8",
          },
          {
            internalType: "uint16[]",
            name: "vestingBps",
            type: "uint16[]",
          },
          {
            internalType: "uint256[]",
            name: "vestingTimestamps",
            type: "uint256[]",
          },
        ],
        internalType: "struct VestingSchedule",
        name: "vestingSchedule",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInvestors",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        internalType: "struct InvestmentKey[]",
        name: "_investmentKeys",
        type: "tuple[]",
      },
      {
        internalType: "uint256[]",
        name: "_investments",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_claimedTokens",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_managerFeeTokens",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_dealdexFeeTokens",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getTotalVestedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "dealdex",
                type: "address",
              },
              {
                internalType: "address",
                name: "manager",
                type: "address",
              },
              {
                internalType: "address",
                name: "project",
                type: "address",
              },
            ],
            internalType: "struct ParticipantAddresses",
            name: "participantAddresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "numerator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "denominator",
                type: "uint256",
              },
            ],
            internalType: "struct ExchangeRate",
            name: "exchangeRate",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "minInvestmentPerInvestor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxInvestmentPerInvestor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minTotalInvestment",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxTotalInvestment",
                    type: "uint256",
                  },
                ],
                internalType: "struct InvestmentSizeConstraints",
                name: "sizeConstraints",
                type: "tuple",
              },
              {
                internalType: "enum LockedDealConstraint",
                name: "lockConstraint",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "investmentTokenAddress",
                type: "address",
              },
              {
                internalType: "address",
                name: "gateToken",
                type: "address",
              },
              {
                internalType: "enum InvestmentKeyType",
                name: "investmentKeyType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "investmentDeadline",
                type: "uint256",
              },
            ],
            internalType: "struct InvestConfig",
            name: "investConfig",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "allowRefunds",
                type: "bool",
              },
              {
                internalType: "enum LockedDealConstraint",
                name: "lockConstraint",
                type: "uint8",
              },
            ],
            internalType: "struct ClaimRefundConfig",
            name: "refundConfig",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "projectTokenAddress",
                type: "address",
              },
              {
                internalType: "uint16",
                name: "dealdexFeeBps",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "managerFeeBps",
                type: "uint16",
              },
              {
                internalType: "enum LockedDealConstraint",
                name: "lockConstraint",
                type: "uint8",
              },
            ],
            internalType: "struct ClaimTokensConfig",
            name: "tokensConfig",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "dealdexFeeBps",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "managerFeeBps",
                type: "uint16",
              },
              {
                internalType: "enum LockedDealConstraint",
                name: "lockConstraint",
                type: "uint8",
              },
            ],
            internalType: "struct ClaimFundsConfig",
            name: "fundsConfig",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum VestingStrategy",
                name: "vestingStrategy",
                type: "uint8",
              },
              {
                internalType: "uint16[]",
                name: "vestingBps",
                type: "uint16[]",
              },
              {
                internalType: "uint256[]",
                name: "vestingTimestamps",
                type: "uint256[]",
              },
            ],
            internalType: "struct VestingSchedule",
            name: "vestingSchedule",
            type: "tuple",
          },
        ],
        internalType: "struct DealConfig",
        name: "_dealConfig",
        type: "tuple",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "invest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "investmentKeyToClaimedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "investmentKeyToReceivedDealdexFeeTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "investmentKeyToReceivedFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "investmentKeyToReceivedManagerFeeTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "investmentKeys",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isLockedFlag",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "overrides",
    outputs: [
      {
        internalType: "bool",
        name: "forceAllowRefunds",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "fundFeeBps",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "tokenFeeBps",
        type: "uint16",
      },
    ],
    name: "setDealDexFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "val",
        type: "bool",
      },
    ],
    name: "setForceAllowRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "fundFeeBps",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "tokenFeeBps",
        type: "uint16",
      },
    ],
    name: "setManagerFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_projectTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_exchangeRateNum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_exchangeRateDenom",
        type: "uint256",
      },
    ],
    name: "setProjectTokenDetails",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReceivedInvestment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061423e806100206000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80639f1906f3116100b8578063ac3077731161007c578063ac307773146102ce578063ace3e818146102d6578063b2f5a54c146102e9578063c3fef37014610302578063d87aa64314610334578063f5ef65d91461034757600080fd5b80639f1906f314610247578063a282d70114610272578063a2bc495614610285578063a4e2d634146102b0578063a869d42c146102bb57600080fd5b80638ffa9f1c116100ff5780638ffa9f1c146101b8578063939a292e146101cb57806399f0e733146101f65780639d9b48a2146102215780639dde9f161461023457600080fd5b8063466b0a281461013c57806346e04a2f146101585780634a85f0411461016d5780635b7baf641461018a57806379502c551461019d575b600080fd5b61014560195481565b6040519081526020015b60405180910390f35b61016b6101663660046135e0565b610354565b005b601b5461017a9060ff1681565b604051901515815260200161014f565b61016b6101983660046135e0565b610b17565b6101a5610ecd565b60405161014f9796959493929190613a30565b61016b6101c63660046134cb565b6112ca565b6101456101d93660046134a0565b601660209081526000928352604080842090915290825290205481565b6101456102043660046134a0565b601360209081526000928352604080842090915290825290205481565b61016b61022f3660046134ff565b6113df565b61016b6102423660046135a8565b611458565b6101456102553660046134a0565b601460209081526000928352604080842090915290825290205481565b6101456102803660046135e0565b6114e3565b6101456102933660046134a0565b601560209081526000928352604080842090915290825290205481565b601a5460ff1661017a565b61016b6102c9366004613553565b6118c3565b61016b6118f1565b61016b6102e43660046135a8565b612030565b6102f16120d9565b60405161014f9594939291906138fd565b6103156103103660046135e0565b612515565b604080516001600160a01b03909316835260208301919091520161014f565b61016b610342366004613610565b61254d565b601a5461017a9060ff1681565b600d546001600160a01b03166103b15760405162461bcd60e51b815260206004820152601f60248201527f50726f6a65637420746f6b656e206e6f7420796574207370656369666965640060448201526064015b60405180910390fd5b600d546103c790600160c01b900460ff16612b32565b601a5460ff16156103e75760405180602001604052806000815250610403565b604051806040016040528060028152602001613ab760f11b8152505b60405160200161041391906137ee565b604051602081830303815290604052906104405760405162461bcd60e51b81526004016103a891906139a7565b50600061044c826114e3565b9050600081116104b35760405162461bcd60e51b815260206004820152602c60248201527f5a65726f20746f6b656e732068617665206265656e2076657374656420746f2060448201526b3a34329034b73b32b9ba37b960a11b60648201526084016103a8565b600d54600090612710906104d290600160a01b900461ffff1684613bca565b6104dc9190613baa565b90506104e9601684612bcb565b81101561057c5760405162461bcd60e51b815260206004820152605560248201527f4465616c44657820686173207265636569766564206d6f726520746f6b656e7360448201527f207468616e2068617665206265656e207665737465642e20417474656d70746560648201527464207265656e7472616e63792061747461636b3f2160581b608482015260a4016103a8565b600d546000906127109061059b90600160b01b900461ffff1685613bca565b6105a59190613baa565b90506105b2601585612bcb565b8110156106455760405162461bcd60e51b815260206004820152605560248201527f4d616e6167657220686173207265636569766564206d6f726520746f6b656e7360448201527f207468616e2068617665206265656e207665737465642e20417474656d70746560648201527464207265656e7472616e63792061747461636b3f2160581b608482015260a4016103a8565b6000826106528386613be9565b61065c9190613be9565b9050610669601486612bcb565b8110156106fc5760405162461bcd60e51b815260206004820152605560248201527f496e766573746f722068617320636c61696d6564206d6f726520746f6b656e7360448201527f207468616e2068617665206265656e207665737465642e20417474656d70746560648201527464207265656e7472616e63792061747461636b3f2160581b608482015260a4016103a8565b6000610709601687612bcb565b6107139085613be9565b90506000610722601588612bcb565b61072c9085613be9565b9050600061073b601489612bcb565b6107459085613be9565b600d546040516370a0823160e01b81523060048201529192506001600160a01b03169060009082906370a082319060240160206040518083038186803b15801561078e57600080fd5b505afa1580156107a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c691906135f8565b9050826107d38587613b92565b6107dd9190613b92565b8110156108415760405162461bcd60e51b815260206004820152602c60248201527f436f6e747261637420646f6573206e6f74206861766520656e6f75676820746f60448201526b1ad95b9cc81d1bc81cd95b9960a21b60648201526084016103a8565b84156109255761085360168b8a612cdc565b60005460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018790529083169063a9059cbb90604401602060405180830381600087803b1580156108a157600080fd5b505af11580156108b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d9919061351b565b6109255760405162461bcd60e51b815260206004820152601b60248201527f546f6b656e2066656520746f204465616c446578206661696c6564000000000060448201526064016103a8565b8315610a1b5761093760158b89612cdc565b60015460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018690529083169063a9059cbb90604401602060405180830381600087803b15801561098557600080fd5b505af1158015610999573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bd919061351b565b610a1b5760405162461bcd60e51b815260206004820152602960248201527f546f6b656e2066656520746f2073796e646963617465206d616e61676572206660448201526819594819985a5b195960ba1b60648201526084016103a8565b8215610b0b57610a2d60148b88612cdc565b60405163a9059cbb60e01b8152336004820152602481018490526001600160a01b0383169063a9059cbb90604401602060405180830381600087803b158015610a7557600080fd5b505af1158015610a89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aad919061351b565b610b0b5760405162461bcd60e51b815260206004820152602960248201527f5472616e73666572206f6620746f6b656e7320746f2074686520696e766573746044820152681bdc8819985a5b195960ba1b60648201526084016103a8565b50505050505050505050565b601b5460ff16610bfb57600c5460ff16610b6c5760405162461bcd60e51b81526020600482015260166024820152754465616c20646973616c6c6f777320726566756e647360501b60448201526064016103a8565b600c54610b8090610100900460ff16612b32565b601a5460ff1615610ba05760405180602001604052806000815250610bbc565b604051806040016040528060028152602001613ab760f11b8152505b604051602001610bcc91906138b4565b60405160208183030381529060405290610bf95760405162461bcd60e51b81526004016103a891906139a7565b505b6000610c08601383612bcb565b905060008111610c775760405162461bcd60e51b815260206004820152603460248201527f5a65726f20696e76657374656421204f6e6c7920616e20696e766573746f722060448201527318d85b881c9958d95a5d994818481c99599d5b9960621b60648201526084016103a8565b6000610c8283612daa565b905060005b601254811015610d765781600001516001600160a01b031660128281548110610cc057634e487b7160e01b600052603260045260246000fd5b60009182526020909120600290910201546001600160a01b0316148015610d1c5750816020015160128281548110610d0857634e487b7160e01b600052603260045260246000fd5b906000526020600020906002020160010154145b15610d645760128181548110610d4257634e487b7160e01b600052603260045260246000fd5b60009182526020822060029091020180546001600160a01b0319168155600101555b80610d6e81613ffc565b915050610c87565b508160196000828254610d899190613be9565b90915550610d9c90506013846000612cdc565b60095460405163a9059cbb60e01b81523360048201526024810184905260009161010090046001600160a01b03169063a9059cbb90604401602060405180830381600087803b158015610dee57600080fd5b505af1158015610e02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e26919061351b565b905080610e845760405162461bcd60e51b815260206004820152602660248201527f4661696c656420746f207472616e736665722074686520726566756e64656420604482015265185b5bdd5b9d60d21b60648201526084016103a8565b60195460408051600081526020810192909252859133917fd6049e9e238db10a7c3d9a8dbac0eab4351c7a1d2b89641af2702624fedcf11291015b60405180910390a350505050565b60408051606081018252600080546001600160a01b0390811683526001548116602080850191909152600280549092168486015284518086018652600354815260045481830152855161014081019096526005805460c0880190815260065460e08901526007546101008901526008546101208901528752600954959691959193909284019160ff1690811115610f7457634e487b7160e01b600052602160045260246000fd5b6002811115610f9357634e487b7160e01b600052602160045260246000fd5b8152600482015461010090046001600160a01b03908116602083015260058301549081166040830152606090910190600160a01b900460ff166001811115610feb57634e487b7160e01b600052602160045260246000fd5b600181111561100a57634e487b7160e01b600052602160045260246000fd5b81526006919091015460209182015260408051808201909152600c8401805460ff80821615158452949594929391929184019161010090910416600281111561106357634e487b7160e01b600052602160045260246000fd5b600281111561108257634e487b7160e01b600052602160045260246000fd5b90525060408051608081018252600d840180546001600160a01b038116835261ffff600160a01b820481166020850152600160b01b820416938301939093529293929091606083019060ff600160c01b9091041660028111156110f557634e487b7160e01b600052602160045260246000fd5b600281111561111457634e487b7160e01b600052602160045260246000fd5b90525060408051606081018252600e8401805461ffff80821684526201000082041660208401529394939192909190830190640100000000900460ff16600281111561117057634e487b7160e01b600052602160045260246000fd5b600281111561118f57634e487b7160e01b600052602160045260246000fd5b9052506040805160608101909152600f83018054929392829060ff1660028111156111ca57634e487b7160e01b600052602160045260246000fd5b60028111156111e957634e487b7160e01b600052602160045260246000fd5b81526020016001820180548060200260200160405190810160405280929190818152602001828054801561126457602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff168152602001906002019060208260010104928301926001038202915080841161122b5790505b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156112bc57602002820191906000526020600020905b8154815260200190600101908083116112a8575b505050505081525050905087565b6002546001600160a01b031633146113375760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79207468652070726f6a6563742063616e20736574207468652070726f6044820152693532b1ba103a37b5b2b760b11b60648201526084016103a8565b600d546001600160a01b0316156113b65760405162461bcd60e51b815260206004820152603f60248201527f5468652070726f6a65637420616c726561647920736574207468652070726f6a60448201527f65637420746f6b656e3b2069742063616e6e6f74206265206368616e6765640060648201526084016103a8565b600d80546001600160a01b0319166001600160a01b039490941693909317909255600355600455565b6000546001600160a01b031633146114455760405162461bcd60e51b8152602060048201526024808201527f4f6e6c79204465616c4465782063616e20666f72636520616c6c6f7720726566604482015263756e647360e01b60648201526084016103a8565b601b805460ff1916911515919091179055565b6000546001600160a01b031633146114b25760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79204465616c4465782063616e2075706461746520697473206665657360448201526064016103a8565b600e805461ffff93841661ffff19909116179055600d805491909216600160a01b0261ffff60a01b19909116179055565b60006002600f5460ff16600281111561150c57634e487b7160e01b600052602160045260246000fd5b14156115705760405162461bcd60e51b815260206004820152602d60248201527f496e766573746d656e742d73697a6520736f727465642076657374696e67206960448201526c1cc81d5b9cdd5c1c1bdc9d1959609a1b60648201526084016103a8565b6000805b60105481101561160d5760118054429190839081106115a357634e487b7160e01b600052603260045260246000fd5b906000526020600020015410156115fb5760108054829081106115d657634e487b7160e01b600052603260045260246000fd5b60009182526020909120601082040154600f9091166002026101000a900461ffff1691505b8061160581613ffc565b915050611574565b50600061162361161e601386612bcb565b612f07565b90506000600f5460ff16600281111561164c57634e487b7160e01b600052602160045260246000fd5b14156116715761271061165f8383613bca565b6116699190613baa565b949350505050565b6000805b601254811015611744576000601282815481106116a257634e487b7160e01b600052603260045260246000fd5b60009182526020822060029091020154601280546001600160a01b03909216935090849081106116e257634e487b7160e01b600052603260045260246000fd5b60009182526020808320600160029093020191909101546001600160a01b038516835260138252604080842082855290925291205490915061172390612f07565b61172d9085613b92565b93505050808061173c90613ffc565b915050611675565b5060006127106117548584613bca565b61175e9190613baa565b9050600061176b87612daa565b90506001600f5460ff16600281111561179457634e487b7160e01b600052602160045260246000fd5b14156118b65760005b6012548110156118b4576000601282815481106117ca57634e487b7160e01b600052603260045260246000fd5b60009182526020822060029091020154601280546001600160a01b039092169350908490811061180a57634e487b7160e01b600052603260045260246000fd5b906000526020600020906002020160010154905083600001516001600160a01b0316826001600160a01b03161480156118465750836020015181145b15611863576118558588612f25565b9a9950505050505050505050565b6001600160a01b038216600090815260136020908152604080832084845290915281205461189090612f07565b905061189c8187613be9565b955050505080806118ac90613ffc565b91505061179d565b505b5060009695505050505050565b6118cc81612f3d565b8060006118d982826140cc565b5050600754601a805460ff1916911591909117905550565b6002546001600160a01b031633146119575760405162461bcd60e51b8152602060048201526024808201527f4f6e6c79207468652070726f6a6563742063616e20636c61696d207468652066604482015263756e647360e01b60648201526084016103a8565b600e5461196e90640100000000900460ff16612b32565b601a5460ff161561198e57604051806020016040528060008152506119aa565b604051806040016040528060028152602001613ab760f11b8152505b6040516020016119ba9190613789565b604051602081830303815290604052906119e75760405162461bcd60e51b81526004016103a891906139a7565b506009546040516370a0823160e01b81523060048201526101009091046001600160a01b03169060009082906370a082319060240160206040518083038186803b158015611a3457600080fd5b505afa158015611a48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6c91906135f8565b600e5490915060009061271090611a879061ffff1684613bca565b611a919190613baa565b9050601854811015611b265760405162461bcd60e51b815260206004820152605260248201527f4465616c44657820686173207265636569766564206d6f72652066756e64732060448201527f7468616e2069742073686f756c6420686176652e20417474656d70746564207260648201527165656e7472616e63792061747461636b3f2160701b608482015260a4016103a8565b600060185482611b369190613be9565b90508015611c37578060186000828254611b509190613b92565b90915550506000805460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018490529086169063a9059cbb90604401602060405180830381600087803b158015611ba457600080fd5b505af1158015611bb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bdc919061351b565b905080611c355760405162461bcd60e51b815260206004820152602160248201527f496e766573746d656e742066656520746f204465616c446578206661696c65646044820152601760f91b60648201526084016103a8565b505b600e5460009061271090611c559062010000900461ffff1686613bca565b611c5f9190613baa565b9050601754811015611cff5760405162461bcd60e51b815260206004820152605c60248201527f53796e646963617465206d616e6167657220686173207265636569766564206d60448201527f6f72652066756e6473207468616e2069742073686f756c6420686176652e204160648201527f7474656d70746564207265656e7472616e63792061747461636b3f2100000000608482015260a4016103a8565b600060175482611d0f9190613be9565b90508015611e1b578060176000828254611d299190613b92565b909155505060015460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810183905260009188169063a9059cbb90604401602060405180830381600087803b158015611d7e57600080fd5b505af1158015611d92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db6919061351b565b905080611e195760405162461bcd60e51b815260206004820152602b60248201527f496e766573746d656e742066656520746f2073796e646963617465206d616e6160448201526a33b2b9103330b4b632b21760a91b60648201526084016103a8565b505b80611e268487613be9565b611e309190613be9565b6040516370a0823160e01b81523060048201526001600160a01b038816906370a082319060240160206040518083038186803b158015611e6f57600080fd5b505afa158015611e83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ea791906135f8565b14611f1a5760405162461bcd60e51b815260206004820152603860248201527f52656d61696e696e672062616c616e636520646f6573206d61746368206f726960448201527f67696e616c2062616c616e6365206d696e75732066656573000000000000000060648201526084016103a8565b6002546000906001600160a01b038089169163a9059cbb911684611f3e888b613be9565b611f489190613be9565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015611f8e57600080fd5b505af1158015611fa2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fc6919061351b565b9050806120275760405162461bcd60e51b815260206004820152602960248201527f4661696c656420746f207472616e736665722066756e647320746f207468652060448201526834b73b32b9ba37b91760b91b60648201526084016103a8565b50505050505050565b6001546001600160a01b031633146120a15760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c79207468652073796e646963617465206d616e616765722063616e207560448201526d706461746520697473206665657360901b60648201526084016103a8565b600e805461ffff938416620100000263ffff000019909116179055600d805491909216600160b01b0261ffff60b01b19909116179055565b606080606080606060128054905067ffffffffffffffff81111561210d57634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561215257816020015b604080518082019091526000808252602082015281526020019060019003908161212b5790505b5060125490955067ffffffffffffffff81111561217f57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156121a8578160200160208202803683370190505b5060125490945067ffffffffffffffff8111156121d557634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156121fe578160200160208202803683370190505b5060125490935067ffffffffffffffff81111561222b57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015612254578160200160208202803683370190505b5060125490925067ffffffffffffffff81111561228157634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156122aa578160200160208202803683370190505b50905060005b60125481101561250d57601281815481106122db57634e487b7160e01b600052603260045260246000fd5b60009182526020918290206040805180820190915260029092020180546001600160a01b031682526001015491810191909152865187908390811061233057634e487b7160e01b600052603260045260246000fd5b602002602001018190525060006012828154811061235e57634e487b7160e01b600052603260045260246000fd5b60009182526020822060029091020154601280546001600160a01b039092169350908490811061239e57634e487b7160e01b600052603260045260246000fd5b60009182526020808320600160029093020191909101546001600160a01b03851683526013825260408084208285529092529120548851919250908890859081106123f957634e487b7160e01b600052603260045260246000fd5b6020908102919091018101919091526001600160a01b03831660009081526014825260408082208483529092522054865187908590811061244a57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101919091526001600160a01b03831660009081526015825260408082208483529092522054855186908590811061249b57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101919091526001600160a01b0383166000908152601682526040808220848352909252205484518590859081106124ec57634e487b7160e01b600052603260045260246000fd5b6020026020010181815250505050808061250590613ffc565b9150506122b0565b509091929394565b6012818154811061252557600080fd5b6000918252602090912060029091020180546001909101546001600160a01b03909116915082565b612558601382612bcb565b156125a55760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f7420696e76657374206d756c7469706c652074696d65730000000060448201526064016103a8565b6005548210156125f75760405162461bcd60e51b815260206004820152601c60248201527f496e766573746d656e7420616d6f756e7420697320746f6f206c6f770000000060448201526064016103a8565b6006548211156126495760405162461bcd60e51b815260206004820152601d60248201527f496e766573746d656e7420616d6f756e7420697320746f6f206869676800000060448201526064016103a8565b6008546019546126599084613b92565b11156126bb5760405162461bcd60e51b815260206004820152602b60248201527f496e766573746d656e742077696c6c2065786365656420746f74616c20696e7660448201526a06573746d656e74206361760ac1b60648201526084016103a8565b600b5442111561270d5760405162461bcd60e51b815260206004820152601e60248201527f496e766573746d656e7420646561646c696e652068617320706173736564000060448201526064016103a8565b600a546001600160a01b031615806127a75750600a546040516331a9108f60e11b81526004810183905233916001600160a01b031690636352211e9060240160206040518083038186803b15801561276457600080fd5b505afa158015612778573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061279c9190613484565b6001600160a01b0316145b6128195760405162461bcd60e51b815260206004820152603b60248201527f496e766573746f7220646f6573206e6f74206f776e207468652072657175697360448201527f697465204e465420666f722074686973206761746564206465616c000000000060648201526084016103a8565b6009546128289060ff16612b32565b601a5460ff16156128485760405180602001604052806000815250612864565b604051806040016040528060028152602001613ab760f11b8152505b6040516020016128749190613854565b604051602081830303815290604052906128a15760405162461bcd60e51b81526004016103a891906139a7565b50600954604051636eb1769f60e11b81523360048201523060248201526101009091046001600160a01b0316908390829063dd62ed3e9060440160206040518083038186803b1580156128f357600080fd5b505afa158015612907573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061292b91906135f8565b10156129965760405162461bcd60e51b815260206004820152603460248201527f496e766573746f7220686173206e6f7420617070726f766564207375666669636044820152731a595b9d08199d5b991cc81d1bc81a5b9d995cdd60621b60648201526084016103a8565b6129a260138385612cdc565b82601960008282546129b49190613b92565b90915550506040516323b872dd60e01b8152336004820152306024820152604481018490526000906001600160a01b038316906323b872dd90606401602060405180830381600087803b158015612a0a57600080fd5b505af1158015612a1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a42919061351b565b905080612a915760405162461bcd60e51b815260206004820152601760248201527f4661696c656420746f20696e7665737420746f6b656e7300000000000000000060448201526064016103a8565b600754601954601a805460ff191692909110159190911790556012612ab584612daa565b8154600180820184556000938452602093849020835160029093020180546001600160a01b0319166001600160a01b03909316929092178255918301519101556019546040805187815292830191909152849133917fd6049e9e238db10a7c3d9a8dbac0eab4351c7a1d2b89641af2702624fedcf1129101610ebf565b600080826002811115612b5557634e487b7160e01b600052602160045260246000fd5b1480612b8d57506001826002811115612b7e57634e487b7160e01b600052602160045260246000fd5b148015612b8d5750601a5460ff165b80612bc557506002826002811115612bb557634e487b7160e01b600052602160045260246000fd5b148015612bc55750601a5460ff16155b92915050565b600080600a54600160a01b900460ff166001811115612bfa57634e487b7160e01b600052602160045260246000fd5b1415612c3d578115612c1e5760405162461bcd60e51b81526004016103a8906139da565b5033600090815260208381526040808320848452909152902054612bc5565b6001600a54600160a01b900460ff166001811115612c6b57634e487b7160e01b600052602160045260246000fd5b1415612c9b5750600a546001600160a01b0316600090815260208381526040808320848452909152902054612bc5565b60405162461bcd60e51b8152602060048201526016602482015275496e76616c696420696e766573746d656e74206b657960501b60448201526064016103a8565b6000600a54600160a01b900460ff166001811115612d0a57634e487b7160e01b600052602160045260246000fd5b1415612d4a578115612d2e5760405162461bcd60e51b81526004016103a8906139da565b3360009081526020938452604080822093825292909352912055565b6001600a54600160a01b900460ff166001811115612d7857634e487b7160e01b600052602160045260246000fd5b1415612da557600a546001600160a01b031660009081526020848152604080832085845290915290208190555b505050565b6040805180820182526000808252602080830182905283518085019094528184528301849052600a54919291600160a01b900460ff166001811115612dff57634e487b7160e01b600052602160045260246000fd5b1415612e78578215612e705760405162461bcd60e51b815260206004820152603460248201527f4964206d757374206265203020666f7220696e766573746f722077616c6c657460448201527320696e766573746d656e74206b6579207479706560601b60648201526084016103a8565b338152612bc5565b6001600a54600160a01b900460ff166001811115612ea657634e487b7160e01b600052602160045260246000fd5b1415612ebf57600a546001600160a01b03168152612bc5565b60405162461bcd60e51b815260206004820152601f60248201527f556e737570706f7274656420696e766573746d656e74206b657920747970650060448201526064016103a8565b60045460035460009190612f1b9084613bca565b612bc59190613baa565b6000818310612f345781612f36565b825b9392505050565b612f53612f4e6102e0830183613b73565b61301b565b6001600a54600160a01b900460ff166001811115612f8157634e487b7160e01b600052602160045260246000fd5b141580612f985750600a546001600160a01b031615155b6130185760405162461bcd60e51b8152602060048201526044602482018190527f4761746520746f6b656e206d757374206265207370656369666965642073696e908201527f636520696e766573746d656e74206b657920747970652069732067617465207460648201526337b5b2b760e11b608482015260a4016103a8565b50565b600261302a6020830183613537565b600281111561304957634e487b7160e01b600052602160045260246000fd5b14156130b15760405162461bcd60e51b815260206004820152603160248201527f496e766573746d656e742d73697a6520736f727465642076657374696e6720696044820152701cc81b9bdd081a5b5c1b195b595b9d1959607a1b60648201526084016103a8565b60006130c06020830183613b24565b90501161310f5760405162461bcd60e51b815260206004820181905260248201527f56657374696e67207363686564756c652063616e6e6f7420626520656d70747960448201526064016103a8565b61311c6040820182613b24565b905061312b6020830183613b24565b9050146131ba5760405162461bcd60e51b815260206004820152605160248201527f56657374696e6720627073206d7573742068617665207468652073616d65207360448201527f697a65202831206f6e203120636f72726573706f6e64656e6365292061732076606482015270657374696e672074696d657374616d707360781b608482015260a4016103a8565b60015b6131ca6020830183613b24565b90508110156133c5576131e06040830183613b24565b6131eb600184613be9565b81811061320857634e487b7160e01b600052603260045260246000fd5b9050602002013582806040019061321f9190613b24565b8381811061323d57634e487b7160e01b600052603260045260246000fd5b90506020020135116132b75760405162461bcd60e51b815260206004820152603c60248201527f56657374696e672074696d656c696e65206d75737420636f6e7461696e20737460448201527f726963746c7920696e6372656173696e672074696d657374616d70730000000060648201526084016103a8565b6132c46020830183613b24565b6132cf600184613be9565b8181106132ec57634e487b7160e01b600052603260045260246000fd5b9050602002016020810190613301919061358c565b61ffff166133126020840184613b24565b8381811061333057634e487b7160e01b600052603260045260246000fd5b9050602002016020810190613345919061358c565b61ffff16116133b35760405162461bcd60e51b815260206004820152603460248201527f56657374656420616d6f756e7473206d757374206265207374726963746c7920604482015273696e6372656173696e6720776974682074696d6560601b60648201526084016103a8565b806133bd81613ffc565b9150506131bd565b506133d36020820182613b24565b60016133e26020850185613b24565b6133ed929150613be9565b81811061340a57634e487b7160e01b600052603260045260246000fd5b905060200201602081019061341f919061358c565b61ffff16612710146130185760405162461bcd60e51b815260206004820152602860248201527f456e64206f662076657374696e67206d757374207969656c642031303025206f6044820152676620746f6b656e7360c01b60648201526084016103a8565b600060208284031215613495578081fd5b8151612f36816141c8565b600080604083850312156134b2578081fd5b82356134bd816141c8565b946020939093013593505050565b6000806000606084860312156134df578081fd5b83356134ea816141c8565b95602085013595506040909401359392505050565b600060208284031215613510578081fd5b8135612f36816141dd565b60006020828403121561352c578081fd5b8151612f36816141dd565b600060208284031215613548578081fd5b8135612f36816141eb565b600060208284031215613564578081fd5b813567ffffffffffffffff81111561357a578182fd5b82016103008185031215612f36578182fd5b60006020828403121561359d578081fd5b8135612f36816141f8565b600080604083850312156135ba578182fd5b82356135c5816141f8565b915060208301356135d5816141f8565b809150509250929050565b6000602082840312156135f1578081fd5b5035919050565b600060208284031215613609578081fd5b5051919050565b60008060408385031215613622578182fd5b50508035926020909101359150565b6000815180845260208085019450808401835b8381101561366057815187529582019590820190600101613644565b509495945050505050565b6002811061367b5761367b61402d565b9052565b61ffff8082511683528060208301511660208401525060408101516136a3816141b8565b806040840152505050565b80511515825260208101516136c2816141b8565b806020840152505050565b60018060a01b038151168252602081015161ffff808216602085015280604084015116604085015250506060810151613705816141b8565b806060840152505050565b6000606083018251613721816141b8565b8452602083810151606082870152805192839052810191839060808701905b8083101561376457845161ffff168252938301936001929092019190830190613740565b5060408601519350868103604088015261377e8185613631565b979650505050505050565b7f43616e6e6f7420636c61696d2066756e64732062656361757365207468652064815266032b0b61034b9960cd1b6020820152600082516137d1816027850160208701613c7e565b651b1bd8dad95960d21b6027939091019283015250602d01919050565b7f43616e6e6f7420636c61696d20746f6b656e732062656361757365207468652081526703232b0b61034b9960c51b602082015260008251613837816028850160208701613c7e565b651b1bd8dad95960d21b6028939091019283015250602e01919050565b7f43616e6e6f7420696e76657374206265636175736520746865206465616c2069815261039960f51b602082015260008251613897816022850160208701613c7e565b651b1bd8dad95960d21b6022939091019283015250602801919050565b7f43616e6e6f7420636c61696d20726566756e642062656361757365207468652081526703232b0b61034b9960c51b602082015260008251613837816028850160208701613c7e565b60a0808252865190820181905260009060209060c0840190828a01845b8281101561394a57815180516001600160a01b03168552850151858501526040909301929084019060010161391a565b5050508381038285015261395e8189613631565b91505082810360408401526139738187613631565b905082810360608401526139878186613631565b9050828103608084015261399b8185613631565b98975050505050505050565b60208152600082518060208401526139c6816040850160208701613c7e565b601f01601f19169190910160400192915050565b60208082526036908201527f496e766573746d656e747320617265206173736f636961746564207769746820604082015275077616c6c657420736f206964206d75737420626520360541b606082015260800190565b600061030060018060a01b03808b511684528060208c01511660208501528060408c01511660408501528951606085015260208a015160808501528851805160a0860152602081015160c0860152604081015160e08601526060810151610100860152506020890151613aa2816141b8565b61012085015260408901511661014084015260608801516001600160a01b03166101608401526080880151613adb61018085018261366b565b5060a08801516101a0840152613af56101c08401886136ae565b613b036102008401876136cd565b613b1161028084018661367f565b806102e084015261185581840185613710565b6000808335601e19843603018112613b3a578283fd5b83018035915067ffffffffffffffff821115613b54578283fd5b6020019150600581901b3603821315613b6c57600080fd5b9250929050565b60008235605e19833603018112613b88578182fd5b9190910192915050565b60008219821115613ba557613ba5614017565b500190565b600082613bc557634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615613be457613be4614017565b500290565b600082821015613bfb57613bfb614017565b500390565b5b81811015613c155760008155600101613c01565b5050565b600160401b831115613c2d57613c2d614043565b805483825580841015613c5357816000526020600020613c51828201868301613c00565b505b50818160005260208060002060005b8681101561202757833582559282019260019182019101613c62565b60005b83811015613c99578181015183820152602001613c81565b83811115613ca8576000848401525b50505050565b8135613cb9816141f8565b61ffff8116905081548161ffff1982161783556020840135613cda816141f8565b63ffff00008160101b169050808363ffffffff198416171784556040850135613d02816141eb565b613d0b816141b8565b64ff000000008160201b168464ffffffffff198516178317178555505050505050565b8135613d39816141dd565b815460ff19811691151560ff1691821783556020840135613d59816141eb565b613d62816141b8565b61ff008160081b168361ffff198416171784555050505050565b8135613d87816141c8565b613d918183614090565b506020820135613da0816141f8565b815461ffff60a01b19811660a09290921b61ffff60a01b1691821783556040840135613dcb816141f8565b61ffff60b01b60b09190911b1663ffffffff60a01b1982168317811784556060850135613df7816141eb565b613e00816141b8565b64ffffffffff60a01b19929092169092179190911760c09190911b60ff60c01b1617905550565b8135815560208201356001820155604082013560028201556060820135600382015560048101613e62613e5c60808501614076565b826140b0565b613e97613e7160a08501614059565b828054610100600160a81b03191660089290921b610100600160a81b0316919091179055565b5060058101613eb1613eab60c08501614059565b82614090565b613ec6613ec060e08501614066565b8261418b565b5061010082013560068201555050565b8135613ee1816141eb565b613eea816141b8565b60ff1982541660ff821681178355505060018082016020613f0d81860186613b24565b600160401b811115613f2157613f21614043565b835481855580821015613f77578460005283600020600f830160041c8101601e84891b168015613f6157600019808301805482848b0360031b1c16815550505b50613f74600f840160041c830182613c00565b50505b5060009384526020842093805b82811015613fda57613fb6613f9885614083565b875461ffff600386901b81811b801990931693909116901b16178755565b8484019350600282019150601e821115613fd35794860194600091505b8601613f84565b50505050505050613fee6040830183613b24565b613ca8818360028601613c19565b600060001982141561401057614010614017565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60008135612bc5816141c8565b6000813560028110612bc5578182fd5b60008135612bc5816141eb565b60008135612bc5816141f8565b80546001600160a01b0319166001600160a01b0392909216919091179055565b6140b9826141b8565b60ff1981541660ff831681178255505050565b81356140d7816141c8565b6140e18183614090565b5060208201356140f0816141c8565b6140fd8160018401614090565b50604082013561410c816141c8565b6141198160028401614090565b50606082013560038201556080820135600482015561413e60a0830160058301613e27565b61414f6101c08301600c8301613d2e565b6141606102008301600d8301613d7c565b6141716102808301600e8301613cae565b613c156141826102e0840184613b73565b600f8301613ed6565b6002821061419b5761419b61402d565b805460ff60a01b191660a09290921b60ff60a01b16919091179055565b600381106130185761301861402d565b6001600160a01b038116811461301857600080fd5b801515811461301857600080fd5b6003811061301857600080fd5b61ffff8116811461301857600080fdfea26469706673582212202d5bcc72f77c7288ef31c4902163b6f1dac815973023b0e5c811234c51c77c4064736f6c63430008040033";

type DealConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DealConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Deal__factory extends ContractFactory {
  constructor(...args: DealConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Deal";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Deal> {
    return super.deploy(overrides || {}) as Promise<Deal>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Deal {
    return super.attach(address) as Deal;
  }
  connect(signer: Signer): Deal__factory {
    return super.connect(signer) as Deal__factory;
  }
  static readonly contractName: "Deal";
  public readonly contractName: "Deal";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DealInterface {
    return new utils.Interface(_abi) as DealInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Deal {
    return new Contract(address, _abi, signerOrProvider) as Deal;
  }
}
