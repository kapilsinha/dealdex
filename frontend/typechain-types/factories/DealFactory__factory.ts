/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DealFactory, DealFactoryInterface } from "../DealFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_dealContractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dealdexAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "project",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "dealAddress",
        type: "address",
      },
    ],
    name: "DealCreated",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "dealdex",
                type: "address",
              },
              {
                internalType: "address",
                name: "manager",
                type: "address",
              },
              {
                internalType: "address",
                name: "project",
                type: "address",
              },
            ],
            internalType: "struct ParticipantAddresses",
            name: "participantAddresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "numerator",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "denominator",
                type: "uint256",
              },
            ],
            internalType: "struct ExchangeRate",
            name: "exchangeRate",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "minInvestmentPerInvestor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxInvestmentPerInvestor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minTotalInvestment",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxTotalInvestment",
                    type: "uint256",
                  },
                ],
                internalType: "struct InvestmentSizeConstraints",
                name: "sizeConstraints",
                type: "tuple",
              },
              {
                internalType: "enum LockedDealConstraint",
                name: "lockConstraint",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "investmentTokenAddress",
                type: "address",
              },
              {
                internalType: "address",
                name: "gateToken",
                type: "address",
              },
              {
                internalType: "enum InvestmentKeyType",
                name: "investmentKeyType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "investmentDeadline",
                type: "uint256",
              },
            ],
            internalType: "struct InvestConfig",
            name: "investConfig",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "allowRefunds",
                type: "bool",
              },
              {
                internalType: "enum LockedDealConstraint",
                name: "lockConstraint",
                type: "uint8",
              },
            ],
            internalType: "struct ClaimRefundConfig",
            name: "refundConfig",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "projectTokenAddress",
                type: "address",
              },
              {
                internalType: "uint16",
                name: "dealdexFeeBps",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "managerFeeBps",
                type: "uint16",
              },
              {
                internalType: "enum LockedDealConstraint",
                name: "lockConstraint",
                type: "uint8",
              },
            ],
            internalType: "struct ClaimTokensConfig",
            name: "tokensConfig",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "dealdexFeeBps",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "managerFeeBps",
                type: "uint16",
              },
              {
                internalType: "enum LockedDealConstraint",
                name: "lockConstraint",
                type: "uint8",
              },
            ],
            internalType: "struct ClaimFundsConfig",
            name: "fundsConfig",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum VestingStrategy",
                name: "vestingStrategy",
                type: "uint8",
              },
              {
                internalType: "uint16[]",
                name: "vestingBps",
                type: "uint16[]",
              },
              {
                internalType: "uint256[]",
                name: "vestingTimestamps",
                type: "uint256[]",
              },
            ],
            internalType: "struct VestingSchedule",
            name: "vestingSchedule",
            type: "tuple",
          },
        ],
        internalType: "struct DealConfig",
        name: "_dealConfig",
        type: "tuple",
      },
    ],
    name: "createDeal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dealContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dealdexAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b3d380380610b3d83398101604081905261002f9161007c565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100ae565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008e578182fd5b61009783610060565b91506100a560208401610060565b90509250929050565b610a80806100bd6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806383c784ca14610046578063937d50b514610075578063dbcdd9d714610088575b600080fd5b600054610059906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b600154610059906001600160a01b031681565b61009b610096366004610594565b61009d565b005b60015481516001600160a01b03918216905260808201516000602090910181905260a083015160fa9081905281549192909183916100db911661018c565b604051632a1a750b60e21b81529091506001600160a01b0382169063a869d42c9061010a90879060040161083d565b600060405180830381600087803b15801561012457600080fd5b505af1158015610138573d6000803e3d6000fd5b5050855160409081015190516001600160a01b03858116825290911692503391507f36bb40958b69ee7898a72c66451d3cd29a974199ddd161bfd49ee8e0bfdc8c9a9060200160405180910390a350505050565b6000808260601b9050604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f0949350505050565b80356001600160a01b03811681146101f557600080fd5b919050565b600082601f83011261020a578081fd5b8135602061021f61021a836109da565b6109a9565b80838252828201915082860187848660051b890101111561023e578586fd5b855b8581101561025c57813584529284019290840190600101610240565b5090979650505050505050565b8035600281106101f557600080fd5b80356101f581610a3d565b600060608284031215610294578081fd5b61029c6108f4565b90506102a782610582565b81526102b560208301610582565b602082015260408201356102c881610a3d565b604082015292915050565b6000604082840312156102e4578081fd5b6102ec61091d565b9050813580151581146102fe57600080fd5b8152602082013561030e81610a3d565b602082015292915050565b60006080828403121561032a578081fd5b610332610940565b905061033d826101de565b815261034b60208301610582565b602082015261035c60408301610582565b6040820152606082013561036f81610a3d565b606082015292915050565b60006040828403121561038b578081fd5b61039361091d565b9050813581526020820135602082015292915050565b60008183036101208112156103bc578182fd5b6103c4610963565b915060808112156103d457600080fd5b506103dd610940565b823581526020830135602082015260408301356040820152606083013560608201528082525061040f60808301610278565b602082015261042060a083016101de565b604082015261043160c083016101de565b606082015261044260e08301610269565b608082015261010082013560a082015292915050565b600060608284031215610469578081fd5b6104716108f4565b905061047c826101de565b815261048a602083016101de565b60208201526102c8604083016101de565b6000606082840312156104ac578081fd5b6104b46108f4565b905081356104c181610a3d565b815260208281013567ffffffffffffffff808211156104df57600080fd5b818501915085601f8301126104f357600080fd5b813561050161021a826109da565b80828252858201915085850189878560051b880101111561052157600080fd5b600095505b8386101561054b5761053781610582565b835260019590950194918601918601610526565b508086880152505050604085013592508083111561056857600080fd5b5050610576848285016101fa565b60408301525092915050565b803561ffff811681146101f557600080fd5b6000602082840312156105a5578081fd5b813567ffffffffffffffff808211156105bc578283fd5b9083019061030082860312156105d0578283fd5b6105d8610986565b6105e28684610458565b81526105f1866060850161037a565b60208201526106038660a085016103a9565b6040820152610616866101c085016102d3565b6060820152610629866102008501610319565b608082015261063c866102808501610283565b60a08201526102e083013582811115610653578485fd5b61065f8782860161049b565b60c08301525095945050505050565b6002811061067e5761067e6109fe565b9052565b61ffff8082511683528060208301511660208401525060408101516106a681610a2a565b806040840152505050565b80511515825260208101516106c581610a2a565b806020840152505050565b60018060a01b038151168252602081015161ffff80821660208501528060408401511660408501525050606081015161070881610a2a565b806060840152505050565b80518051835260208101516020840152604081015160408401526060810151606084015250602081015161074681610a2a565b608083015260408101516001600160a01b031660a0830152606081015161077860c08401826001600160a01b03169052565b50608081015161078b60e084018261066e565b5060a001516101009190910152565b60006060830182516107ab81610a2a565b8452602083810151606082870152805192839052810191839060808701905b808310156107ee57845161ffff1682529383019360019290920191908301906107ca565b506040868101518883039189019190915280518083529084019450908301915084905b808210156108315784518352938301939183019160019190910190610811565b50909695505050505050565b6020808252825180516001600160a01b03908116848401528183015181166040808601919091529182015116606084015283820151805160808501529091015160a083015282015160009061089560c0840182610713565b5060608301516108a96101e08401826106b1565b5060808301516108bd6102208401826106d0565b5060a08301516108d16102a0840182610682565b5060c0830151610300838101526108ec61032084018261079a565b949350505050565b6040516060810167ffffffffffffffff8111828210171561091757610917610a14565b60405290565b6040805190810167ffffffffffffffff8111828210171561091757610917610a14565b6040516080810167ffffffffffffffff8111828210171561091757610917610a14565b60405160c0810167ffffffffffffffff8111828210171561091757610917610a14565b60405160e0810167ffffffffffffffff8111828210171561091757610917610a14565b604051601f8201601f1916810167ffffffffffffffff811182821017156109d2576109d2610a14565b604052919050565b600067ffffffffffffffff8211156109f4576109f4610a14565b5060051b60200190565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60038110610a3a57610a3a6109fe565b50565b60038110610a3a57600080fdfea264697066735822122085c75c30e46ddd1dbdb523f3cf30ddecca83c5c15189597acab2f4332b41d13c64736f6c63430008040033";

type DealFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DealFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DealFactory__factory extends ContractFactory {
  constructor(...args: DealFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "DealFactory";
  }

  deploy(
    _dealContractAddress: string,
    _dealdexAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DealFactory> {
    return super.deploy(
      _dealContractAddress,
      _dealdexAddress,
      overrides || {}
    ) as Promise<DealFactory>;
  }
  getDeployTransaction(
    _dealContractAddress: string,
    _dealdexAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _dealContractAddress,
      _dealdexAddress,
      overrides || {}
    );
  }
  attach(address: string): DealFactory {
    return super.attach(address) as DealFactory;
  }
  connect(signer: Signer): DealFactory__factory {
    return super.connect(signer) as DealFactory__factory;
  }
  static readonly contractName: "DealFactory";
  public readonly contractName: "DealFactory";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DealFactoryInterface {
    return new utils.Interface(_abi) as DealFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DealFactory {
    return new Contract(address, _abi, signerOrProvider) as DealFactory;
  }
}
